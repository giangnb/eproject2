/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.project2.mybudget.views;

import com.project2.mybudget.App;
import com.project2.mybudget.exception.AppException;
import com.project2.mybudget.exception.ExceptionViewer;
import com.project2.mybudget.models.Data;
import com.project2.mybudget.models.Wallet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Giang
 */
public class BudgetView extends javax.swing.JFrame {

    DefaultComboBoxModel<String> cboWalletModel;

    /**
     * Creates new form BudgetView
     */
    public BudgetView() {
        initComponents();

        cboWalletModel = new DefaultComboBoxModel<>();
        cboWalletModel.addElement("(all wallets)");
        try {
            ArrayList<String> walletStr = new ArrayList<>();
            for (Wallet s : App.WALLET.getWallet()) {
                cboWalletModel.addElement(s.getInfo().getName());
            }
            cboWallet.setModel(cboWalletModel);
            cboWallet.setSelectedIndex(0);
        } catch (AppException ex) {
            ExceptionViewer.view(ex);
        }

        SimpleDateFormat fmt = new SimpleDateFormat("dd-MM-yyyy");
        dateFrom.setDateFormat(fmt);
        dateTo.setDateFormat(fmt);
        Calendar cal = Calendar.getInstance();
        Date d = new Date();
        d.setTime(d.getTime() - 1000 * 60 * 60 * 24 * 7);
        cal.setTime(d);
        dateFrom.setSelectedDate(cal);

        btnEdit.setVisible(false);
        btnDelete.setVisible(false);
        btnCancelSearch.setVisible(false);

        initTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtSearch = new javax.swing.JTextField();
        cboWallet = new javax.swing.JComboBox<>();
        dateFrom = new datechooser.beans.DateChooserCombo();
        dateTo = new datechooser.beans.DateChooserCombo();
        btnAddIncome = new javax.swing.JButton();
        btnAddExpense = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblContent = new javax.swing.JTable() {
            public boolean isCellEditable(int row, int column) {
                return false;
            };
        };
        chkExpense = new javax.swing.JCheckBox();
        chkIncome = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnCancelSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        cboWallet.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboWallet.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboWalletItemStateChanged(evt);
            }
        });

        dateFrom.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);
        dateFrom.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                dateFromOnSelectionChange(evt);
            }
        });
        dateFrom.addCommitListener(new datechooser.events.CommitListener() {
            public void onCommit(datechooser.events.CommitEvent evt) {
                dateFromOnCommit(evt);
            }
        });

        dateTo.setFormat(1);
        dateTo.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);
        dateTo.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                dateToOnSelectionChange(evt);
            }
        });

        btnAddIncome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/project2/mybudget/images/menu_add.png"))); // NOI18N
        btnAddIncome.setText("New income");
        btnAddIncome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddIncomeActionPerformed(evt);
            }
        });

        btnAddExpense.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/project2/mybudget/images/menu_minus.png"))); // NOI18N
        btnAddExpense.setText("New expense");
        btnAddExpense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddExpenseActionPerformed(evt);
            }
        });

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/project2/mybudget/images/btn_edit.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("|");

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/project2/mybudget/images/menu_remove.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tblContent.setAutoCreateRowSorter(true);
        tblContent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Date", "Wallet", "Amount", "Reason"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblContent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblContentMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblContent);

        chkExpense.setSelected(true);
        chkExpense.setText("Expense");
        chkExpense.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkExpenseStateChanged(evt);
            }
        });

        chkIncome.setSelected(true);
        chkIncome.setText("Income");
        chkIncome.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkIncomeStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("from");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("to");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("wallet");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("search");

        btnCancelSearch.setText("Cancel search");
        btnCancelSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSearch)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboWallet, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnAddIncome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAddExpense)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnEdit)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancelSearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                .addComponent(chkIncome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkExpense))
                            .addComponent(jScrollPane2))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboWallet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateFrom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateTo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddIncome)
                    .addComponent(btnAddExpense)
                    .addComponent(btnEdit)
                    .addComponent(jLabel1)
                    .addComponent(btnDelete)
                    .addComponent(chkExpense)
                    .addComponent(chkIncome)
                    .addComponent(btnCancelSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddIncomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddIncomeActionPerformed
        JDialog d = new JDialog(this, "Add new income", true);
        JFrame budget = new BudgetAdd(true);
        d.add(budget.getContentPane());
        d.setMinimumSize(budget.getSize());
        d.setLocationRelativeTo(this);
        d.setVisible(true);
    }//GEN-LAST:event_btnAddIncomeActionPerformed

    private void btnAddExpenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddExpenseActionPerformed
        JDialog d = new JDialog(this, "Add new expense", true);
        JFrame budget = new BudgetAdd(false);
        d.add(budget.getContentPane());
        d.setMinimumSize(budget.getSize());
        d.setLocationRelativeTo(this);
        d.setVisible(true);
    }//GEN-LAST:event_btnAddExpenseActionPerformed

    private void tblContentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblContentMouseClicked
        if (tblContent.getSelectedRow() >= 0) {
            btnEdit.setVisible(true);
            btnDelete.setVisible(true);
        }
    }//GEN-LAST:event_tblContentMouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        Data data = (Data) tblContent.getModel().getValueAt(tblContent.getSelectedRow(), 2);
        boolean isIncome = data.getAmount() > 0;
        String title;
        if (isIncome) {
            title = "Modify income information";
        } else {
            title = "Modify expense information";
        }
        JDialog d = new JDialog(this, title, true);
        JFrame budget = new BudgetEdit(isIncome, data);
        d.add(budget.getContentPane());
        d.setMinimumSize(budget.getSize());
        d.setLocationRelativeTo(this);
        d.setVisible(true);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        Data data = (Data) tblContent.getModel().getValueAt(tblContent.getSelectedRow(), 2);

        int choice = JOptionPane.showConfirmDialog(null, "Do you want to delete selected information permanently?",
                "Delete data", JOptionPane.YES_NO_OPTION);
        // choice: 0 = YES ; 1 = NO
        if (choice == 0) {
            if (App.DATA.deleteItem(data)) {
                initTable();
            } else {
                ExceptionViewer.view(new AppException("Cannot delete selected item. Please try again."));
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void cboWalletItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboWalletItemStateChanged
        initTable();
    }//GEN-LAST:event_cboWalletItemStateChanged

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        searchView();

        String s = txtSearch.getText().trim().toLowerCase();

        for (int i = 0; i < tblContent.getRowCount(); i++) {
            Data d = (Data) tblContent.getModel().getValueAt(i, 2);
            if (!(d.getDescription().toLowerCase().contains(s) || d.getReason().toLowerCase().contains(s))) {
                ((DefaultTableModel) tblContent.getModel()).removeRow(i);
            }
        }
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnCancelSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelSearchActionPerformed
        endSearchView();
    }//GEN-LAST:event_btnCancelSearchActionPerformed

    private void chkIncomeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkIncomeStateChanged
        incomeExpenseSwitch();
    }//GEN-LAST:event_chkIncomeStateChanged

    private void chkExpenseStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkExpenseStateChanged
        incomeExpenseSwitch();
    }//GEN-LAST:event_chkExpenseStateChanged

    private void dateFromOnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_dateFromOnCommit
        
    }//GEN-LAST:event_dateFromOnCommit

    private void dateFromOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_dateFromOnSelectionChange
        initTable();
    }//GEN-LAST:event_dateFromOnSelectionChange

    private void dateToOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_dateToOnSelectionChange
        initTable();
    }//GEN-LAST:event_dateToOnSelectionChange

    /**
         * @param args the command line arguments
         */
    public static void run(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BudgetView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BudgetView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BudgetView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BudgetView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BudgetView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddExpense;
    private javax.swing.JButton btnAddIncome;
    private javax.swing.JButton btnCancelSearch;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private static javax.swing.JComboBox<String> cboWallet;
    private javax.swing.JCheckBox chkExpense;
    private javax.swing.JCheckBox chkIncome;
    private static datechooser.beans.DateChooserCombo dateFrom;
    private static datechooser.beans.DateChooserCombo dateTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JTable tblContent;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    public static void initTable() {
        DefaultTableModel model = new DefaultTableModel();
        SimpleDateFormat fmt = new SimpleDateFormat("d-M-y");

        model.addColumn("Date");
        model.addColumn("Wallet");
        model.addColumn("Amount");
        model.addColumn("Reason");
        if (cboWallet.getSelectedItem().equals("(all wallets)")) {
            App.DATA.loadDataByDate(dateFrom.getSelectedDate().getTime(), dateTo.getSelectedDate().getTime());
        } else {
            Wallet wallet = null;
            try {
                for (Wallet w : App.WALLET.getWallet()) {
                    if (w.getInfo().getName().equals(cboWallet.getSelectedItem().toString())) {
                        wallet = w;
                        break;
                    }
                }
                App.DATA.loadDataByDateAndWallet(dateFrom.getSelectedDate().getTime(), dateTo.getSelectedDate().getTime(), wallet);
            } catch (AppException ex) {
                ExceptionViewer.view(ex);
            }
        }

        for (Data data : App.DATA.getBudget()) {
            model.addRow(new Object[]{fmt.format(data.getDate()), data.getWallet().getInfo().getName(), data, data.getReason()});
        }
        tblContent.setModel(model);
    }

    private void searchView() {
        btnCancelSearch.setVisible(true);
        cboWallet.setEnabled(false);
        dateFrom.setEnabled(false);
        dateTo.setEnabled(false);
    }

    private void endSearchView() {
        initTable();
        btnCancelSearch.setVisible(false);
        cboWallet.setEnabled(true);
        dateFrom.setEnabled(true);
        dateTo.setEnabled(true);
        txtSearch.setText("");
        chkExpense.setSelected(true);
        chkIncome.setSelected(true);
    }

    private void incomeExpenseSwitch() {
        if (dateFrom.isEnabled()) {
            searchView();
        }

        if (chkIncome.isSelected() && !chkExpense.isSelected()) {
            for (int i = 0; i < tblContent.getRowCount(); i++) {
                Data d = (Data) tblContent.getModel().getValueAt(i, 2);
                if (d.getAmount() < 0) {
                    ((DefaultTableModel) tblContent.getModel()).removeRow(i);
                }
            }
        } else if (chkExpense.isSelected() && !chkIncome.isSelected()) {
            for (int i = 0; i < tblContent.getRowCount(); i++) {
                Data d = (Data) tblContent.getModel().getValueAt(i, 2);
                if (d.getAmount() > 0) {
                    ((DefaultTableModel) tblContent.getModel()).removeRow(i);
                }
            }
        } else if (chkExpense.isSelected() && chkIncome.isSelected() && !txtSearch.getText().equals("")) {
            String s = txtSearch.getText().trim().toLowerCase();
            for (int i = 0; i < tblContent.getRowCount(); i++) {
                Data d = (Data) tblContent.getModel().getValueAt(i, 2);
                if (!(d.getDescription().toLowerCase().contains(s) || d.getReason().toLowerCase().contains(s))) {
                    ((DefaultTableModel) tblContent.getModel()).removeRow(i);
                }
            }
        } else if (!chkExpense.isSelected() && !chkIncome.isSelected()) {
            for (int i = 0; i < tblContent.getRowCount(); i++) {
                Data d = (Data) tblContent.getModel().getValueAt(i, 2);
                if (d.getAmount() != 0) {
                    ((DefaultTableModel) tblContent.getModel()).removeRow(i);
                }
            }
        }else {
            endSearchView();
        }
    }
}
