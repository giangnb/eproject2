/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.project2.mybudget.views;

import com.project2.mybudget.App;
import com.project2.mybudget.controllers.DatabaseController;
import com.project2.mybudget.controllers.DatabaseController.DatabaseInfo;
import com.project2.mybudget.data.DataHelper;
import com.project2.mybudget.data.Encrypt;
import com.project2.mybudget.data.FileControl;
import com.project2.mybudget.data.Json;
import com.project2.mybudget.exception.AppException;
import com.project2.mybudget.exception.ExceptionViewer;
import com.project2.mybudget.properties.Constants;
import static java.lang.System.exit;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

/**
 *
 * @author Giang
 */
public class DatabaseSetup extends javax.swing.JFrame {

    /**
     * Creates new form DatabaseSetup
     */
    public DatabaseSetup() {
        initComponents();

        if (App.DB == null) {
            rdoDefault.setSelected(true);
        } else {
            rdoCustom.setSelected(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        txtHost = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPort = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        rdoDefault = new javax.swing.JRadioButton();
        rdoCustom = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        pswPassword = new javax.swing.JPasswordField();
        btnTest = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnHelp = new javax.swing.JButton();
        btnInitDb = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Database setup");

        jLabel2.setText("Database host");

        txtHost.setText("localhost");

        jLabel3.setText("SQL Server port");

        txtPort.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtPort.setText("1433");

        jLabel4.setText("Database name");

        buttonGroup1.add(rdoDefault);
        rdoDefault.setText("Default settings");
        rdoDefault.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rdoDefaultStateChanged(evt);
            }
        });

        buttonGroup1.add(rdoCustom);
        rdoCustom.setText("Custom settings");
        rdoCustom.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rdoCustomStateChanged(evt);
            }
        });

        jLabel6.setText("User name");

        jLabel7.setText("Password");

        btnTest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/project2/mybudget/images/btn_test.png"))); // NOI18N
        btnTest.setText("Test connection");
        btnTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/project2/mybudget/images/btn_ok.png"))); // NOI18N
        btnSave.setText("Save settings");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/project2/mybudget/images/btn_setup.png"))); // NOI18N
        btnHelp.setText("How to");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });

        btnInitDb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/project2/mybudget/images/menu_settings.png"))); // NOI18N
        btnInitDb.setText("Save and initialize database");
        btnInitDb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInitDbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHost)
                            .addComponent(txtPort)
                            .addComponent(txtName)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(59, 59, 59)
                        .addComponent(txtUser))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rdoDefault)
                        .addGap(18, 18, 18)
                        .addComponent(rdoCustom)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTest)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                                .addComponent(btnHelp))
                            .addComponent(pswPassword)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnInitDb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSave)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoDefault)
                    .addComponent(rdoCustom))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(pswPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTest)
                    .addComponent(btnHelp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnInitDb))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        JFrame dbHelp = new DatabaseHelp(txtName.getText().equals("") ? "your_db_name" : txtName.getText());
        JDialog dlg = new JDialog(this, "How to setup database", true);
        dlg.setLocationRelativeTo(this);
        dlg.setSize(dbHelp.getSize());
        dlg.setContentPane(dbHelp.getContentPane());
        dlg.setResizable(false);
        dlg.setVisible(true);
    }//GEN-LAST:event_btnHelpActionPerformed

    private void rdoDefaultStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rdoDefaultStateChanged
        if (rdoDefault.isSelected()) {
            txtHost.setEnabled(false);
            txtPort.setEnabled(false);
            txtName.setEnabled(false);
            txtUser.setEnabled(false);
            pswPassword.setEnabled(false);
        }
    }//GEN-LAST:event_rdoDefaultStateChanged

    private void rdoCustomStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rdoCustomStateChanged
        if (rdoCustom.isSelected()) {
            txtHost.setEnabled(true);
            txtPort.setEnabled(true);
            txtName.setEnabled(true);
            txtUser.setEnabled(true);
            pswPassword.setEnabled(true);
            if (App.DB != null) {
                txtHost.setText(App.DB.getInfo().getHost());
                txtPort.setText(App.DB.getInfo().getPort() + "");
                txtUser.setText(App.DB.getInfo().getUser());
                txtName.setText(App.DB.getInfo().getName());
            }
        }
    }//GEN-LAST:event_rdoCustomStateChanged

    private void btnTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestActionPerformed
        boolean isOk = false;
        try {
            if (rdoDefault.isSelected()) {
                isOk = new DataHelper().checkConnection();
            } else {
                String sqlUri = "jdbc:sqlserver://" + txtHost.getText() + ":" + txtPort.getText() + ";databaseName=" + txtName.getText();
                isOk = new DataHelper().checkConnection(
                        sqlUri,
                        txtUser.getText(),
                        new String(pswPassword.getPassword()));
            }
        } catch (AppException | ClassNotFoundException | SQLException ex) {
            System.out.println(ex.getMessage());
        }
        if (isOk) {
            JOptionPane.showMessageDialog(this, "Database connect successful", "Database test", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Database connect failed", "Database test", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnTestActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (rdoDefault.isSelected()) {
            FileControl.removeFile(Constants.file("DATABASE_CONFIG"));
            App.DB = null;
        } else {
//            String content = String.format("jdbc:sqlserver://?:?;databaseName=?\n?\n?",
//                    txtHost.getText(), txtPort.getText(), txtName.getText(), txtUser.getText(), new String(pswPassword.getPassword()));
            DatabaseController.DatabaseInfo db;
            db = new DatabaseController.DatabaseInfo(
                    txtHost.getText(),
                    txtUser.getText(),
                    txtName.getText(),
                    new String(pswPassword.getPassword()), "",
                    Integer.parseInt(txtPort.getText()));
            DatabaseController control = new DatabaseController(db);
            try {
                FileControl.writeString(Constants.file("DATABASE_CONFIG"), Encrypt.encrypt(Json.SerializeObject(db)));
                App.DB = control;
                int choose = JOptionPane.showConfirmDialog(this, "Setup completed.\nFor stability, you are recommended to restart this application.\n\nDo you want to exit this application now?", "Database setup success", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                if (choose == 0) {
                    exit(1);
                }
            } catch (AppException ex) {
                ExceptionViewer.view(ex);
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnInitDbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInitDbActionPerformed
        String[] sql = new String[]{
            "create table [Accounts] ([AccountId] varchar(128) primary key,[Authentication] nvarchar(512) not null default '',[Info] ntext not null default '',[LastChange] datetime not null default CURRENT_TIMESTAMP)",
            "create table [Wallets] ([WalletId] int primary key identity,[AccountId] varchar(128) not null,[Info] ntext not null default '')",
            "create table [Data] ([DataId] bigint primary key identity,[WalletId] int not null,[Reason] nvarchar(128),[Amount] varchar(64) not null default '0',[Description] ntext,[Date_] DateTime not null default CURRENT_TIMESTAMP)",
            "alter table [Wallets] add constraint FK_Wallets_Accounts foreign key (AccountId) references [Accounts]([AccountId])",
            "alter table [Data] add constraint FK_Data_Wallets foreign key (WalletId) references [Wallets]([WalletId])"
        };

        if (rdoDefault.isSelected()) {
            FileControl.removeFile(Constants.file("DATABASE_CONFIG"));
        } else {
//            String content = String.format("jdbc:sqlserver://?:?;databaseName=?\n?\n?",
//                    txtHost.getText(), txtPort.getText(), txtName.getText(), txtUser.getText(), new String(pswPassword.getPassword()));
            DatabaseController.DatabaseInfo db;
            db = new DatabaseController.DatabaseInfo(
                    txtHost.getText(),
                    txtUser.getText(),
                    txtName.getText(),
                    new String(pswPassword.getPassword()), "",
                    Integer.parseInt(txtPort.getText()));
            DatabaseController control = new DatabaseController(db);
            try {
                FileControl.writeString(Constants.file("DATABASE_CONFIG"), Encrypt.encrypt(Json.SerializeObject(db)));
                App.DB = control;

                DataHelper data = new DataHelper();
                for (String s : sql) {
                    try {
                        data.open();
                        data.query(s);
                        data.close();
                    } catch (AppException ex) {
                        ExceptionViewer.view(ex);
                    }
                }

                int choose = JOptionPane.showConfirmDialog(this, "Setup completed.\nFor stability, you are recommended to restart this application.\n\nDo you want to exit this application now?", "Database setup success", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                if (choose == 0) {
                    exit(1);
                }
            } catch (AppException ex) {
                ExceptionViewer.view(ex);
            }
        }
    }//GEN-LAST:event_btnInitDbActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void run() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatabaseSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatabaseSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatabaseSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatabaseSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatabaseSetup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnInitDb;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTest;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPasswordField pswPassword;
    private javax.swing.JRadioButton rdoCustom;
    private javax.swing.JRadioButton rdoDefault;
    private javax.swing.JTextField txtHost;
    private javax.swing.JTextField txtName;
    private javax.swing.JFormattedTextField txtPort;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
