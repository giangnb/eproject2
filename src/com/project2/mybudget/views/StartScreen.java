/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.project2.mybudget.views;

import com.project2.mybudget.App;
import com.project2.mybudget.data.DataHelper;
import com.project2.mybudget.data.FileControl;
import com.project2.mybudget.exception.AppException;
import com.project2.mybudget.exception.ExceptionViewer;
import com.project2.mybudget.properties.Constants;
import com.sun.java.swing.plaf.windows.WindowsLookAndFeel;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import static java.lang.System.exit;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Giang
 */
public class StartScreen extends javax.swing.JFrame {

    private Color bgr;

    /**
     * Creates new form StartScreen
     */
    public StartScreen() {
        initComponents();
        bgr = new Color(255, 177, 74);
        setOpacity(0.75f);
        this.getContentPane().setBackground(bgr);
        setIconImage(App.ICON);
        setSize(App.SCREEN_SIZE.width / 3, App.SCREEN_SIZE.height / 3);
        setLocationRelativeTo(null);
        setResizable(false);
        lblStatus.setText("Initializing...");

        loadIconImage();

        setVisible(true);
        loadProcess();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        pnlIcon = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MyBudget");
        setBackground(new java.awt.Color(255, 204, 51));
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        setLocationByPlatform(true);
        setUndecorated(true);
        setType(java.awt.Window.Type.POPUP);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MyBudget");

        lblStatus.setText("WELCOME");

        pnlIcon.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(lblStatus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblStatus)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //loadProcess();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated

    /**
     *
     */
    public static void run() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(new WindowsLookAndFeel());
                    break;
                }
            }
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StartScreen().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JPanel pnlIcon;
    // End of variables declaration//GEN-END:variables

    private void loadProcess() {
        try {
            Thread.sleep(500);
            lblStatus.setText("Please wait...");
            Thread.sleep(500);
        } catch (InterruptedException ex) {
            Logger.getLogger(StartScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("Init OK");

        try {
            lblStatus.setText("Checking connection...");
            if (!new DataHelper().checkConnection()) {
                this.dispose();
                DatabaseSetup.run();
                run();
            }
        } catch (AppException ex) {
            AppException exception = new AppException(ex.getMessage().split("&&")[0] + "\nApp will now discontinue.");
            //ExceptionViewer.view(exception);
            //this.setVisible(false);
            JDialog dialog = new JDialog(this, "Database setup", true);
            DatabaseSetup db = new DatabaseSetup();
            dialog.setContentPane(db.getContentPane());
            dialog.setSize(db.getSize());
            dialog.setResizable(false);
            dialog.setVisible(true);
            JOptionPane.showMessageDialog(this, "You have configurated database. Please restart application.", "Database config", JOptionPane.INFORMATION_MESSAGE);
            exit(1);
        }
        System.out.println("Connection OK");

        try {
            lblStatus.setText("Checking database structure...");
            if (!new DataHelper().checkDatabase()) {
                this.dispose();
                DatabaseSetup.run();
            }
        } catch (AppException | SQLException | ClassNotFoundException ex) {
            if (!FileControl.isFileExists(Constants.file("DATABASE_CONFIG"))) {
                AppException exception = new AppException(ex.getMessage().split("&&")[0] + "\nApp will now discontinue.");
                ExceptionViewer.view(exception);
                this.dispose();
                exit(1);
            }
        }
        System.out.println("Database OK");

        if (!FileControl.readString(Constants.file("USER_LOGIN")).equals("")) {
            lblStatus.setText("Logging in...");
            try {
                if (App.ACCOUNT.loginAuto()) {
                    if (App.ACCOUNT.getAccount().getInfo().status <= 1) {
                        MainScreen.run();
                    } else {
                        AccountLogin.run();
                    }
                } else {
                    AccountLogin.run();
                }
            } catch (AppException ex) {
                AccountLogin.run();
            }
        } else {
            AccountLogin.run();
        }

        this.dispose();
    }

    private void loadIconImage() {
        try {
            BufferedImage img = ImageIO.read(new File(Constants.file("ICON_IMAGE")));
            ImageIcon icon = new ImageIcon(img);

            img = new BufferedImage(pnlIcon.getSize().height, pnlIcon.getSize().height, BufferedImage.TYPE_INT_ARGB);
            Graphics2D gr = img.createGraphics();
            gr.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
            gr.drawImage(icon.getImage(), 0, 0, pnlIcon.getSize().height, pnlIcon.getSize().height, null);
            gr.dispose();

            JLabel lblImage = new JLabel(new ImageIcon(img));
            lblImage.setBackground(bgr);
            pnlIcon.setBackground(bgr);
            pnlIcon.add(lblImage);
//            Graphics g = pnlIcon.getGraphics();
//            pnlIcon.paintComponents(g);
//            g.drawImage(img, 0, 0, null);
//            this.getGraphics().drawImage(img, 0, 0, null);
        } catch (IOException ex) {
            // ignore
            System.out.println("Image load error");
        }
    }
}
